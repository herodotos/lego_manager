<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="4" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="3962" started-at="2014-11-10T21:58:43Z" finished-at="2014-11-10T21:58:47Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="3962" started-at="2014-11-10T21:58:43Z" finished-at="2014-11-10T21:58:47Z">
      <class name="cz.muni.fi.KitManagerTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="7" started-at="2014-11-10T22:58:43Z" finished-at="2014-11-10T22:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="2553" started-at="2014-11-10T22:58:43Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2014-11-10T22:58:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2014-11-10T22:58:46Z" finished-at="2014-11-10T22:58:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.muni.fi.KitManagerTest.addKitTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="setUp" is-config="true" duration-ms="143" started-at="2014-11-10T22:58:46Z" finished-at="2014-11-10T22:58:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="addKitTest()[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="addKitTest" duration-ms="150" started-at="2014-11-10T22:58:46Z" finished-at="2014-11-10T22:58:46Z">
          <exception class="org.mockito.exceptions.misusing.NotAMockException">
            <message>
              <![CDATA[
Argument passed to verify() is of type KitManagerImpl and is not a mock!
Make sure you place the parenthesis correctly!
See the examples of correct verifications:
    verify(mock).someMethod();
    verify(mock, times(10)).someMethod();
    verify(mock, atLeastOnce()).someMethod();]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.mockito.exceptions.misusing.NotAMockException: 
Argument passed to verify() is of type KitManagerImpl and is not a mock!
Make sure you place the parenthesis correctly!
See the examples of correct verifications:
    verify(mock).someMethod();
    verify(mock, times(10)).someMethod();
    verify(mock, atLeastOnce()).someMethod();
	at cz.muni.fi.KitManagerTest.addKitTest(KitManagerTest.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- org.mockito.exceptions.misusing.NotAMockException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addKitTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="23" started-at="2014-11-10T22:58:46Z" finished-at="2014-11-10T22:58:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.muni.fi.KitManagerTest.addKitTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="328" started-at="2014-11-10T22:58:46Z" finished-at="2014-11-10T22:58:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.muni.fi.KitManagerTest.removeKitTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="setUp" is-config="true" duration-ms="3" started-at="2014-11-10T22:58:47Z" finished-at="2014-11-10T22:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="removeKitTest()[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="removeKitTest" duration-ms="1" started-at="2014-11-10T22:58:47Z" finished-at="2014-11-10T22:58:47Z">
          <exception class="org.mockito.exceptions.misusing.NotAMockException">
            <message>
              <![CDATA[
Argument passed to verify() is of type KitManagerImpl and is not a mock!
Make sure you place the parenthesis correctly!
See the examples of correct verifications:
    verify(mock).someMethod();
    verify(mock, times(10)).someMethod();
    verify(mock, atLeastOnce()).someMethod();]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.mockito.exceptions.misusing.NotAMockException: 
Argument passed to verify() is of type KitManagerImpl and is not a mock!
Make sure you place the parenthesis correctly!
See the examples of correct verifications:
    verify(mock).someMethod();
    verify(mock, times(10)).someMethod();
    verify(mock, atLeastOnce()).someMethod();
	at cz.muni.fi.KitManagerTest.removeKitTest(KitManagerTest.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- org.mockito.exceptions.misusing.NotAMockException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeKitTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="18" started-at="2014-11-10T22:58:47Z" finished-at="2014-11-10T22:58:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.muni.fi.KitManagerTest.removeKitTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="318" started-at="2014-11-10T22:58:47Z" finished-at="2014-11-10T22:58:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.muni.fi.KitManagerTest.saveKitTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="setUp" is-config="true" duration-ms="2" started-at="2014-11-10T22:58:47Z" finished-at="2014-11-10T22:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="saveKitTest()[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="saveKitTest" duration-ms="2" started-at="2014-11-10T22:58:47Z" finished-at="2014-11-10T22:58:47Z">
          <exception class="org.mockito.exceptions.misusing.NotAMockException">
            <message>
              <![CDATA[
Argument passed to verify() is of type KitManagerImpl and is not a mock!
Make sure you place the parenthesis correctly!
See the examples of correct verifications:
    verify(mock).someMethod();
    verify(mock, times(10)).someMethod();
    verify(mock, atLeastOnce()).someMethod();]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.mockito.exceptions.misusing.NotAMockException: 
Argument passed to verify() is of type KitManagerImpl and is not a mock!
Make sure you place the parenthesis correctly!
See the examples of correct verifications:
    verify(mock).someMethod();
    verify(mock, times(10)).someMethod();
    verify(mock, atLeastOnce()).someMethod();
	at cz.muni.fi.KitManagerTest.saveKitTest(KitManagerTest.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- org.mockito.exceptions.misusing.NotAMockException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveKitTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="10" started-at="2014-11-10T22:58:47Z" finished-at="2014-11-10T22:58:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.muni.fi.KitManagerTest.saveKitTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:cz.muni.fi.KitManagerTest@6f3ee250]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2014-11-10T22:58:47Z" finished-at="2014-11-10T22:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- cz.muni.fi.KitManagerTest -->
      <class name="cz.muni.fi.CategoryServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:cz.muni.fi.CategoryServiceTest@63145a0c]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2014-11-10T22:58:47Z" finished-at="2014-11-10T22:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:cz.muni.fi.CategoryServiceTest@63145a0c]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="249" started-at="2014-11-10T22:58:47Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2014-11-10T22:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="setup()[pri:0, instance:cz.muni.fi.CategoryServiceTest@63145a0c]" name="setup" is-config="true" duration-ms="113" started-at="2014-11-10T22:58:47Z" finished-at="2014-11-10T22:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.muni.fi.CategoryServiceTest@63145a0c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-11-10T22:58:47Z" finished-at="2014-11-10T22:58:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.muni.fi.CategoryServiceTest.entitySave()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="entitySave()[pri:0, instance:cz.muni.fi.CategoryServiceTest@63145a0c]" name="entitySave" duration-ms="0" started-at="2014-11-10T22:58:47Z" finished-at="2014-11-10T22:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- entitySave -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.muni.fi.CategoryServiceTest@63145a0c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="19" started-at="2014-11-10T22:58:47Z" finished-at="2014-11-10T22:58:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.muni.fi.CategoryServiceTest.entitySave()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:cz.muni.fi.CategoryServiceTest@63145a0c]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2014-11-10T22:58:47Z" finished-at="2014-11-10T22:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- cz.muni.fi.CategoryServiceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
